---
import { Icon } from "astro-icon/components";

let pathname = Astro.url.pathname;
---

<nav
  class="fixed inset-x-0 top-0 py-8 md:py-16 motion-safe:transition-[padding] motion-safe:duration-500 z-50"
>
  <div
    class="container mx-auto flex justify-between items-center px-5 sm:px-12"
  >
    <a class="text-3xl font-extrabold hidden lg:block" href="/">Barra</a>
    <ul class="flex gap-[5vw] sm:gap-12 text-base sm:text-xl md:text-2xl">
      <li>
        <a
          href="/"
          class={pathname == "/"
            ? "font-semibold"
            : "text-gray-500 transition-colors duration-300 hover:text-gray-300"}
          >Home</a
        >
      </li>
      <li>
        <a
          href="/projects"
          class={pathname.startsWith("/projects")
            ? "font-semibold"
            : "text-gray-500 transition-colors duration-300 hover:text-gray-300"}
          >Projects</a
        >
      </li>
      <li>
        <a
          href="/blogs"
          class={pathname.startsWith("/blogs")
            ? "font-semibold"
            : "text-gray-500 transition-colors duration-300 hover:text-gray-300"}
          >Blogs</a
        >
      </li>
    </ul>
    <ul class="flex gap-[3vw] sm:gap-8 justify-center items-center">
      <li>
        <a href="https://github.com/barraIhsan" target="_blank">
          <Icon
            name="simple-icons:github"
            class="size-5 md:size-8 text-gray-50 transition-colors hover:text-gray-300"
          />
        </a>
      </li>
      <li>
        <a href="https://twitter.com/barrsan_" target="_blank">
          <Icon
            name="twitter"
            class="size-5 md:size-8 text-gray-50 transition-colors hover:text-gray-300"
          />
        </a>
      </li>
      <li class="relative">
        <button id="lang" class="block">
          <Icon
            name="heroicons:language"
            class="size-5 md:size-8 text-gray-50 transition-colors hover:text-gray-300"
          />
        </button>
        <!-- language switcher popup -->
        <ul
          class="absolute right-0 top-[200%] bg-gray-800 rounded-lg w-max text-sm md:text-xl overflow-hidden transition-[opacity,transform] duration-300 ease-out -translate-y-2 invisible"
          id="langPopup"
        >
          <li>
            <button
              class="py-2 md:py-3 px-5 md:px-8 transition-colors duration-300 hover:bg-gray-700 font-semibold text-blue-300 w-full text-left"
            >
              ðŸ‡ºðŸ‡¸ English
            </button>
          </li>
          <li>
            <button
              class="py-2 md:py-3 px-5 md:px-8 transition-colors duration-300 hover:bg-gray-700 w-full text-left"
            >
              ðŸ‡®ðŸ‡© Bahasa
            </button>
          </li>
        </ul>
      </li>
    </ul>
  </div>
</nav>

<script>
  // nav
  const nav = document.querySelector("nav");
  let scrollPos: number;

  let bigNav = ["py-8", "md:py-16"];

  let smallNav = ["py-4", "md:py-6", "bg-gray-900/70", "backdrop-blur-lg"];

  const updateNav = () => {
    scrollPos = window.scrollY;
    if (scrollPos <= 100) {
      nav?.classList.add(...bigNav);
      nav?.classList.remove(...smallNav);
    } else {
      nav?.classList.add(...smallNav);
      nav?.classList.remove(...bigNav);
    }
  };

  // run it when the web loaded for the first time
  updateNav();

  // and when the user scroll the webpages
  window.addEventListener("scroll", () => updateNav());

  // lang switcher popup
  const lang = document.querySelector("#lang");
  const langPopup = document.querySelector("#langPopup");

  const enter = ["visible", "translate-y-0", "active"];
  const leave = ["invisible", "-translate-y-2"];
  lang?.addEventListener("click", () => {
    if (langPopup?.classList.contains("active")) {
      langPopup?.classList.remove(...enter);
      langPopup?.classList.add(...leave);
    } else {
      langPopup?.classList.add(...enter);
      langPopup?.classList.remove(...leave);
    }
  });
</script>
